{"version":3,"sources":["webpack:///./src/layouts/index.tsx"],"names":["library","push","text","reg","useReg","dooringContext","createContext","theme","setTheme","children","useState","modalOpen","setModalOpen","num","setNum","callb","useCallback","v","setTimeout","returnValue","generateRespones","setList","prev","isUser","useRegister","onOk","onCancel","title","width","paddingTop","marginTop","borderTop","fontSize","render","state","setState","height","overflow","position","right","bottom","transition","zIndex","pre","borderRadius","transform"],"mappings":"8QAMAA,IAAQC,KAEN,CACEC,KAAM,QACNC,IAAK,OAEP,CACED,KACE,6BACE,uBAAG,KAAK,gCAAR,QACA,uBAAG,KAAK,iCAAR,eACA,uBAAG,KAAK,qCAAR,oBAGJE,OAAQ,mBAUL,GAAMC,GAAiBC,wBAAmC,CAC/DC,MAAO,KACPC,SAAU,SAGG,cAAoD,GAAlCC,GAAkC,EAAlCA,SAAkC,EAC/BC,mBAAS,IADsB,mBAC1DC,EAD0D,KAC/CC,EAD+C,OAE3CF,mBAAS,GAFkC,mBAE1DG,EAF0D,KAErDC,EAFqD,KAG3DC,EAAQC,sBAAaC,IACzBC,WAAW,KAET,GAAIC,GAAcC,YAAiBH,GAC/BE,GAEFE,EAAQC,GAAQ,CAAC,GAAGA,EAAM,CAAEC,OAAQ,GAAOrB,KAAMiB,MAElD,MAEF,IAb8D,EAevCK,YACxBb,EACAI,EACA,CACEU,KAAM,KACJb,EAAa,IACbE,EAAO,IAETY,SAAU,KACRd,EAAa,IACbE,EAAO,IAETa,MAAO,kBACPC,MAAO,KAET,GACA,sEAEE,yBAAK,MAAO,CAAEC,WAAY,OAAQC,UAAW,OAAQC,UAAW,sBAC9D,4CACA,6BACE,oCACiB,IACf,uBAAG,KAAK,0CAA0C,OAAO,SAAS,IAAI,cAAtE,mBAIF,oCACiB,IACf,uBACE,KAAK,8DACL,OAAO,SACP,IAAI,cAHN,UAQF,yBAAK,MAAO,CAAEC,SAAU,SAAxB,yCApDyD,mBAe1DC,EAf0D,KAelDZ,EAfkD,OA4DvCX,mBAA6B,MA5DU,mBA4D1DwB,EA5D0D,KA4DnDC,EA5DmD,KA6DjE,MACE,mBAAC,EAAe,SAAhB,CACE,MAAO,CACL5B,MAAO2B,EACP1B,SAAU2B,IAGZ,yBAAK,MAAO,CAAEC,OAAQ,OAAQR,MAAO,OAAQS,SAAU,WACrD,yBACE,MAAO,CACLC,SAAU,QACVC,MAAO,GAAF,OAAK1B,IAAQ,EAAI,QAAUA,IAAQ,EAAI,QAAU,OACtD2B,OAAQ,OACRC,WAAY,uBACZC,OAAQ,GAEV,aAAc,KAEZ5B,EAAO,IAET,aAAc,KACZA,EAAO6B,GAAQA,IAAQ,EAAI,EAAIA,KAGjC,uBACE,KAAK,UACL,MAAO,CACLF,WAAY,uBACZG,aAAc,GAAF,OAAK/B,IAAQ,EAAI,SAAW,OACxCgC,UAAW,GAAF,OAAKhC,IAAQ,EAAI,aAAe,aAE3C,QAAS,KACPD,EAAa,CAACD,GACd,CAACA,GAAaG,EAAO,KAGvB,kBAAC,IAAD,QAIHmB,EACAxB","file":"layouts__index.js","sourcesContent":["import React, { createContext, useCallback, useState } from 'react';\nimport { library, generateRespones, RenderList, useRegister } from 'chatbot-antd';\nimport { IRouteComponentProps } from 'umi';\nimport { Button } from 'antd';\nimport { CustomerServiceOutlined } from '@ant-design/icons';\n\nlibrary.push(\n  //语料库，push进去，也可以不用\n  {\n    text: '我是机器人',\n    reg: '你是谁',\n  },\n  {\n    text: (\n      <div>\n        <a href=\"https://github.com/MrXujiang\">@徐小夕</a>\n        <a href=\"https://github.com/yehuozhili\">@yehuozhili</a>\n        <a href=\"https://github.com/zhangjinlongll\">@zhangjinlongll</a>\n      </div>\n    ),\n    useReg: /(.*?)作者是谁(.*?)/,\n  },\n);\n\nexport type dooringContextType = 'h5' | 'pc';\n\nexport interface IdooringContextType {\n  theme: dooringContextType;\n  setTheme: Function;\n}\nexport const dooringContext = createContext<IdooringContextType>({\n  theme: 'h5',\n  setTheme: () => {},\n});\n\nexport default function Layout({ children }: IRouteComponentProps) {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [num, setNum] = useState(0);\n  const callb = useCallback((v: RenderList) => {\n    setTimeout(() => {\n      //使用settimeout 更像机器人回话\n      let returnValue = generateRespones(v);\n      if (returnValue) {\n        //排除null\n        setList(prev => [...prev, { isUser: false, text: returnValue }]);\n      }\n    }, 500);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  // 注册\n  const [render, setList] = useRegister(\n    modalOpen,\n    callb,\n    {\n      onOk: () => {\n        setModalOpen(false);\n        setNum(0);\n      },\n      onCancel: () => {\n        setModalOpen(false);\n        setNum(0);\n      },\n      title: 'h5-Dooring机器人客服',\n      width: 400,\n    },\n    {},\n    <div>\n      welcome!欢迎使用h5-Dooring，你有任何问题，都可以咨询我哦～\n      <div style={{ paddingTop: '10px', marginTop: '10px', borderTop: '1px solid #f0f0f0' }}>\n        <div>【dooring指南】</div>\n        <div>\n          <div>\n            &nbsp;&nbsp;1.{' '}\n            <a href=\"https://github.com/MrXujiang/h5-Dooring\" target=\"_blank\" rel=\"noreferrer\">\n              H5-Dooring源码地址\n            </a>\n          </div>\n          <div>\n            &nbsp;&nbsp;2.{' '}\n            <a\n              href=\"https://github.com/MrXujiang/h5-Dooring/graphs/contributors\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              贡献者列表\n            </a>\n          </div>\n          <div style={{ fontSize: '12px' }}>\n            &nbsp;&nbsp;3. dooring开源交流群(微信：Mr_xuxiaoxi)\n          </div>\n        </div>\n      </div>\n    </div>,\n  );\n\n  const [state, setState] = useState<dooringContextType>('h5');\n  return (\n    <dooringContext.Provider\n      value={{\n        theme: state,\n        setTheme: setState,\n      }}\n    >\n      <div style={{ height: '100%', width: '100%', overflow: 'hidden' }}>\n        <div\n          style={{\n            position: 'fixed',\n            right: `${num === 0 ? '-10px' : num === 1 ? '-100%' : '0px'}`,\n            bottom: '80px',\n            transition: 'all 0.3s ease-in-out',\n            zIndex: 2,\n          }}\n          onMouseEnter={() => {\n            //0初始，1点击 2移入\n            setNum(2);\n          }}\n          onMouseLeave={() => {\n            setNum(pre => (pre === 2 ? 0 : pre));\n          }}\n        >\n          <Button\n            type=\"primary\"\n            style={{\n              transition: 'all 0.3s ease-in-out',\n              borderRadius: `${num === 0 ? '1000px' : '0px'}`,\n              transform: `${num === 0 ? 'scale(0.5)' : 'scale(1)'}`,\n            }}\n            onClick={() => {\n              setModalOpen(!modalOpen);\n              !modalOpen && setNum(1);\n            }}\n          >\n            <CustomerServiceOutlined></CustomerServiceOutlined>\n          </Button>\n        </div>\n\n        {render}\n        {children}\n      </div>\n    </dooringContext.Provider>\n  );\n}\n"],"sourceRoot":""}